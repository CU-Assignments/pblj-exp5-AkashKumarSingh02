import java.io.*;
import java.util.ArrayList;
import java.util.Scanner;

class Employee implements Serializable {
    private static final long serialVersionUID = 1L;
    int empId;
    String name, designation;
    double salary;

    public Employee(int empId, String name, String designation, double salary) {
        this.empId = empId;
        this.name = name;
        this.designation = designation;
        this.salary = salary;
    }

    public void display() {
        System.out.println("ID: " + empId + ", Name: " + name + ", Designation: " + designation + ", Salary: " + salary);
    }
}

public class EmployeeManagement {
    static final String FILE_NAME = "employees.ser";
    static ArrayList<Employee> employeeList = new ArrayList<>();

    public static void main(String[] args) {
        loadEmployees(); 
        Scanner sc = new Scanner(System.in);

        while (true) {
            System.out.println("\nMenu:");
            System.out.println("1. Add Employee");
            System.out.println("2. Display All Employees");
            System.out.println("3. Exit");
            System.out.print("Enter your choice: ");
            int choice = sc.nextInt();
            sc.nextLine(); 

            switch (choice) {
                case 1:
                    addEmployee(sc);
                    break;
                case 2:
                    displayEmployees();
                    break;
                case 3:
                    saveEmployees();
                    System.out.println("Exiting...");
                    sc.close();
                    return;
                default:
                    System.out.println("Invalid choice! Try again.");
            }
        }
    }

    public static void addEmployee(Scanner sc) {
        System.out.print("Enter Employee ID: ");
        int id = sc.nextInt();
        sc.nextLine();
        System.out.print("Enter Name: ");
        String name = sc.nextLine();
        System.out.print("Enter Designation: ");
        String designation = sc.nextLine();
        System.out.print("Enter Salary: ");
        double salary = sc.nextDouble();

        employeeList.add(new Employee(id, name, designation, salary));
        System.out.println("Employee added successfully!");
    }

    public static void displayEmployees() {
        if (employeeList.isEmpty()) {
            System.out.println("No employees found!");
            return;
        }
        for (Employee e : employeeList) {
            e.display();
        }
    }

    public static void saveEmployees() {
        try (ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(FILE_NAME))) {
            out.writeObject(employeeList);
            System.out.println("Employees saved successfully!");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static void loadEmployees() {
        try (ObjectInputStream in = new ObjectInputStream(new FileInputStream(FILE_NAME))) {
            employeeList = (ArrayList<Employee>) in.readObject();
        } catch (FileNotFoundException e) {
          
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }
}
